{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"8OD8T","rootPoint":{"objectClass":"CGPoint","x":408.99999999999994,"y":492.5},"lineColorHex":"#BBBBBB","children":{"0":{"objectClass":"MindNode","ID":"SEQU4","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"FV91W","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"31YRB","lineColorHex":"#DC306C","text":""},"objectClass":"NSArray"},"text":"启动：net start MongoDB\n关闭MongoDB服务：net stop MongoDB"},"1":{"objectClass":"MindNode","ID":"C812N","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"28826","lineColorHex":"#DC306C","text":"mongoose.connect():connect() 返回一个状态待定（pending）的连接"},"objectClass":"NSArray"},"text":"node中用法："},"objectClass":"NSArray"},"text":"MongoDB"},"1":{"objectClass":"MindNode","ID":"G7UUS","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"2T43N","lineColorHex":"#BF58F5","text":"https://www.keystonejs.com/"},"objectClass":"NSArray"},"text":"Keystone 5： 快速建数据库表，后台管理工具"},"2":{"objectClass":"MindNode","ID":"QZR3X","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"5M090","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"1QOP7","lineColorHex":"#26BBFF","text":"http://www.mongoosejs.net/docs/index.html","url":"http://www.mongoosejs.net/docs/index.html"},"objectClass":"NSArray"},"text":"安装:npm install mongoose --save\n引入： require('mongoose')"},"1":{"objectClass":"MindNode","ID":"841J5","lineColorHex":"#26BBFF","text":"","remark":"const mongoose = require(\"mongoose\");\n\n//与数据库建立连接,connect() 返回一个状态待定（pending）的连接\n//fruit表\nmongoose.connect('mongodb://localhost:27017/fruit', {\n    useNewUrlParser: true\n});\n//  1. 进行连接\nvar conn = mongoose.connection;\nconn.on('error', () => console.err('连接数据库失败！'));\nconn.once('open', async() => {\n    // 2. 定义一个Schema - table\n    var Schema = mongoose.Schema({\n        category: String,\n        name: String\n    });\n\n    // 3. 编译一个modle。它对应数据库中复数，小写的collection\n    var Model = mongoose.model('new', Schema);\n    try {\n        // 4.创建数据返回promise\n        let r = await Model.create({ category: '电器', name: '洗衣机', price: 2599 });\n        console.log('插入数据成功！');\n\n        // 5. 查询， find返回query，他实现了then和catch ，可以当做promise使用\n        r = await Model.find({ name: '洗衣机' })\n        console.log(r)\n\n        // 6.更新，updateOne返回Query\n        r = await Model.updateOne({ name: '洗衣机' }, {\n            $set: { name: '电视' }\n        })\n        console.log(\"更新结果：\", r);\n\n        // 7.删除，deleteOne返回Query\n        r = await Model.deleteOne({ name: \"芒果\" });\n        console.log(\"删除结果：\", r);\n    } catch (err) {\n        console.log(err)\n    }\n\n})"},"objectClass":"NSArray"},"text":"ODM模块 mongoose 应用"},"objectClass":"NSArray"},"text":"数据库"}}